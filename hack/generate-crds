#!/bin/bash
#
# Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved. This file is licensed under the Apache Software License, v. 2 except as noted otherwise in the LICENSE file
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

loop()
{
  cd crds
  for f in *; do
    if [ -f "$f" -a "$f" != "manifest.go" ]; then
      i="$(basename "$f" .yaml)"
      cat <<EOF
  data=\`
$(cat "$f")
  \`
  add("$i",data)
EOF
    fi
  done
}

PROJECT_ROOT=$(dirname $0)/..

#echo "ROOT=$PROJECT_ROOT"
#echo "DIR=$(pwd)"

mkdir -p crds
rm -f crds/*
"${PROJECT_ROOT}/hack/controller-gen.sh"  \
   "crd:crdVersions=v1;v1beta1,trivialVersions=true" \
    paths="./..." \
    output:crd:artifacts:config=crds

cat >"crds/manifests.go" <<EOF
$(cat "$PROJECT_ROOT"/hack/LICENSE_BOILERPLATE.txt)

package crds

import (
	"strings"
)

var CRDS = map[string]map[string]string{}

func add(name, data string) {
	path:= strings.Split(name,".")
	version:=path[len(path)-1]
	if version!="v1beta1" {
		version="v1"
	}

	crds:=CRDS[version]
	if crds==nil {
		crds=map[string]string{}
		CRDS[version]=crds
	}
	crds[path[0]]=data
}

func init() {
  var data string
$(loop)
}
EOF
