// +build !ignore_autogenerated

/*
Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved. This file is licensed under the Apache Software License, v. 2 except as noted otherwise in the LICENSE file

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha1

import (
	example "github.com/gardener/controller-manager-library/pkg/controllermanager/examples/apis/example"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*Example)(nil), (*example.Example)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Example_To_example_Example(a.(*Example), b.(*example.Example), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*example.Example)(nil), (*Example)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_example_Example_To_v1alpha1_Example(a.(*example.Example), b.(*Example), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ExampleList)(nil), (*example.ExampleList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ExampleList_To_example_ExampleList(a.(*ExampleList), b.(*example.ExampleList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*example.ExampleList)(nil), (*ExampleList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_example_ExampleList_To_v1alpha1_ExampleList(a.(*example.ExampleList), b.(*ExampleList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ExampleSpec)(nil), (*example.ExampleSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ExampleSpec_To_example_ExampleSpec(a.(*ExampleSpec), b.(*example.ExampleSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*example.ExampleSpec)(nil), (*ExampleSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_example_ExampleSpec_To_v1alpha1_ExampleSpec(a.(*example.ExampleSpec), b.(*ExampleSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*example.ExampleSpec)(nil), (*ExampleSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_example_ExampleSpec_To_v1alpha1_ExampleSpec(a.(*example.ExampleSpec), b.(*ExampleSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*ExampleSpec)(nil), (*example.ExampleSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ExampleSpec_To_example_ExampleSpec(a.(*ExampleSpec), b.(*example.ExampleSpec), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha1_Example_To_example_Example(in *Example, out *example.Example, s conversion.Scope) error {
	if err := Convert_v1alpha1_ExampleSpec_To_example_ExampleSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_Example_To_example_Example is an autogenerated conversion function.
func Convert_v1alpha1_Example_To_example_Example(in *Example, out *example.Example, s conversion.Scope) error {
	return autoConvert_v1alpha1_Example_To_example_Example(in, out, s)
}

func autoConvert_example_Example_To_v1alpha1_Example(in *example.Example, out *Example, s conversion.Scope) error {
	if err := Convert_example_ExampleSpec_To_v1alpha1_ExampleSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_example_Example_To_v1alpha1_Example is an autogenerated conversion function.
func Convert_example_Example_To_v1alpha1_Example(in *example.Example, out *Example, s conversion.Scope) error {
	return autoConvert_example_Example_To_v1alpha1_Example(in, out, s)
}

func autoConvert_v1alpha1_ExampleList_To_example_ExampleList(in *ExampleList, out *example.ExampleList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]example.Example, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_Example_To_example_Example(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_ExampleList_To_example_ExampleList is an autogenerated conversion function.
func Convert_v1alpha1_ExampleList_To_example_ExampleList(in *ExampleList, out *example.ExampleList, s conversion.Scope) error {
	return autoConvert_v1alpha1_ExampleList_To_example_ExampleList(in, out, s)
}

func autoConvert_example_ExampleList_To_v1alpha1_ExampleList(in *example.ExampleList, out *ExampleList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Example, len(*in))
		for i := range *in {
			if err := Convert_example_Example_To_v1alpha1_Example(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_example_ExampleList_To_v1alpha1_ExampleList is an autogenerated conversion function.
func Convert_example_ExampleList_To_v1alpha1_ExampleList(in *example.ExampleList, out *ExampleList, s conversion.Scope) error {
	return autoConvert_example_ExampleList_To_v1alpha1_ExampleList(in, out, s)
}

func autoConvert_v1alpha1_ExampleSpec_To_example_ExampleSpec(in *ExampleSpec, out *example.ExampleSpec, s conversion.Scope) error {
	// WARNING: in.Hostname requires manual conversion: does not exist in peer-type
	// WARNING: in.URLScheme requires manual conversion: does not exist in peer-type
	// WARNING: in.Port requires manual conversion: does not exist in peer-type
	// WARNING: in.Path requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_example_ExampleSpec_To_v1alpha1_ExampleSpec(in *example.ExampleSpec, out *ExampleSpec, s conversion.Scope) error {
	// WARNING: in.URL requires manual conversion: does not exist in peer-type
	return nil
}
